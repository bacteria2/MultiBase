<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.data.reletiondb.role.dao.MRoleMapper">
  <resultMap id="BaseResultMap" type="com.multi.data.reletiondb.role.MRole">
    <id column="role_id" jdbcType="BIGINT" property="id" />
    <result column="role_role" jdbcType="INTEGER" property="role" />
    <result column="role_decription" jdbcType="VARCHAR" property="decription" />
    <result column="role_status" jdbcType="TINYINT" property="status" />
    <result column="role_creator" jdbcType="VARCHAR" property="creator" />
    <result column="role_create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="role_update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    role.id as role_id, role.role as role_role, role.decription as role_decription, role.status as role_status, 
    role.creator as role_creator, role.create_time as role_create_time, role.update_time as role_update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from multi_demo_role role
    where role.id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from multi_demo_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.multi.data.reletiondb.role.MRole">
    insert into multi_demo_role (id, role, decription, 
      status, creator, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=INTEGER}, #{decription,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{creator,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.multi.data.reletiondb.role.MRole">
    insert into multi_demo_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="decription != null">
        decription,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=INTEGER},
      </if>
      <if test="decription != null">
        #{decription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.multi.data.reletiondb.role.MRole">
    update multi_demo_role
    <set>
      <if test="role != null">
        role = #{role,jdbcType=INTEGER},
      </if>
      <if test="decription != null">
        decription = #{decription,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.multi.data.reletiondb.role.MRole">
    update multi_demo_role
    set role = #{role,jdbcType=INTEGER},
      decription = #{decription,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      creator = #{creator,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>